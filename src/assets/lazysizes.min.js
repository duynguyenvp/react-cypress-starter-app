/*! lazysizes - v5.2.2 */

!(function (e) {
  const t = (function (u, D, f) {
    let k; let H; if ((function () {
      let e; const t = {
        lazyClass: "lazyload", loadedClass: "lazyloaded", loadingClass: "lazyloading", preloadClass: "lazypreload", errorClass: "lazyerror", autosizesClass: "lazyautosizes", srcAttr: "data-src", srcsetAttr: "data-srcset", sizesAttr: "data-sizes", minSize: 40, customMedia: {}, init: true, expFactor: 1.5, hFac: 0.8, loadMode: 2, loadHidden: true, ricTimeout: 0, throttleDelay: 125
      }; H = u.lazySizesConfig || u.lazysizesConfig || {}; for (e in t) { if (!(e in H)) { H[e] = t[e]; } }
    }()), !D || !D.getElementsByClassName) { return { init() {}, cfg: H, noSupport: true }; } const O = D.documentElement; const a = u.HTMLPictureElement; const P = "addEventListener"; const $ = "getAttribute"; const q = u[P].bind(u); const I = u.setTimeout; const U = u.requestAnimationFrame || I; const l = u.requestIdleCallback; const j = /^picture$/i; const r = ["load", "error", "lazyincluded", "_lazyloaded"]; const i = {}; const G = Array.prototype.forEach; const J = function (e, t) { if (!i[t]) { i[t] = new RegExp(`(\\s|^)${t}(\\s|$)`); } return i[t].test(e[$]("class") || "") && i[t]; }; const K = function (e, t) { if (!J(e, t)) { e.setAttribute("class", `${(e[$]("class") || "").trim()} ${t}`); } }; const Q = function (e, t) { let i; if (i = J(e, t)) { e.setAttribute("class", (e[$]("class") || "").replace(i, " ")); } }; var V = function (t, i, e) { const a = e ? P : "removeEventListener"; if (e) { V(t, i); }r.forEach((e) => { t[a](e, i); }); }; const X = function (e, t, i, a, r) { const n = D.createEvent("Event"); if (!i) { i = {}; }i.instance = k; n.initEvent(t, !a, !r); n.detail = i; e.dispatchEvent(n); return n; }; const Y = function (e, t) { let i; if (!a && (i = u.picturefill || H.pf)) { if (t && t.src && !e[$]("srcset")) { e.setAttribute("srcset", t.src); }i({ reevaluate: true, elements: [e] }); } else if (t && t.src) { e.src = t.src; } }; const Z = function (e, t) { return (getComputedStyle(e, null) || {})[t]; }; const s = function (e, t, i) { i = i || e.offsetWidth; while (i < H.minSize && t && !e._lazysizesWidth) { i = t.offsetWidth; t = t.parentNode; } return i; }; const ee = (function () { let i; let a; const t = []; const r = []; let n = t; const s = function () { const e = n; n = t.length ? r : t; i = true; a = false; while (e.length) { e.shift()(); }i = false; }; const e = function (e, t) { if (i && !t) { e.apply(this, arguments); } else { n.push(e); if (!a) { a = true; (D.hidden ? I : U)(s); } } }; e._lsFlush = s; return e; }()); const te = function (i, e) { return e ? function () { ee(i); } : function () { const e = this; const t = arguments; ee(() => { i.apply(e, t); }); }; }; const ie = function (e) { let i; let a = 0; const r = H.throttleDelay; let n = H.ricTimeout; const t = function () { i = false; a = f.now(); e(); }; const s = l && n > 49 ? function () { l(t, { timeout: n }); if (n !== H.ricTimeout) { n = H.ricTimeout; } } : te(() => { I(t); }, true); return function (e) { let t; if (e = e === true) { n = 33; } if (i) { return; }i = true; t = r - (f.now() - a); if (t < 0) { t = 0; } if (e || t < 9) { s(); } else { I(s, t); } }; }; const ae = function (e) { let t; let i; const a = 99; const r = function () { t = null; e(); }; var n = function () { const e = f.now() - i; if (e < a) { I(n, a - e); } else { (l || r)(r); } }; return function () { i = f.now(); if (!t) { t = I(n, a); } }; }; const e = (function () {
      let v; let m; let c; let h; let e; let y; let z; let g; let p; let C; let b; let A; const n = /^img$/i; const d = /^iframe$/i; const E = "onscroll" in u && !/(gle|ing)bot/.test(navigator.userAgent); const _ = 0; let w = 0; let N = 0; let M = -1; const x = function (e) { N--; if (!e || N < 0 || !e.target) { N = 0; } }; const W = function (e) { if (A == null) { A = Z(D.body, "visibility") == "hidden"; } return A || !(Z(e.parentNode, "visibility") == "hidden" && Z(e, "visibility") == "hidden"); }; const S = function (e, t) { let i; let a = e; let r = W(e); g -= t; b += t; p -= t; C += t; while (r && (a = a.offsetParent) && a != D.body && a != O) { r = (Z(a, "opacity") || 1) > 0; if (r && Z(a, "overflow") != "visible") { i = a.getBoundingClientRect(); r = C > i.left && p < i.right && b > i.top - 1 && g < i.bottom + 1; } } return r; }; const t = function () { let e; let t; let i; let a; let r; let n; let s; let l; let o; let u; let f; let c; const d = k.elements; if ((h = H.loadMode) && N < 8 && (e = d.length)) { t = 0; M++; for (;t < e; t++) { if (!d[t] || d[t]._lazyRace) { continue; } if (!E || k.prematureUnveil && k.prematureUnveil(d[t])) { R(d[t]); continue; } if (!(l = d[t][$]("data-expand")) || !(n = l * 1)) { n = w; } if (!u) { u = !H.expand || H.expand < 1 ? O.clientHeight > 500 && O.clientWidth > 500 ? 500 : 370 : H.expand; k._defEx = u; f = u * H.expFactor; c = H.hFac; A = null; if (w < f && N < 1 && M > 2 && h > 2 && !D.hidden) { w = f; M = 0; } else if (h > 1 && M > 1 && N < 6) { w = u; } else { w = _; } } if (o !== n) { y = innerWidth + n * c; z = innerHeight + n; s = n * -1; o = n; }i = d[t].getBoundingClientRect(); if ((b = i.bottom) >= s && (g = i.top) <= z && (C = i.right) >= s * c && (p = i.left) <= y && (b || C || p || g) && (H.loadHidden || W(d[t])) && (m && N < 3 && !l && (h < 3 || M < 4) || S(d[t], n))) { R(d[t]); r = true; if (N > 9) { break; } } else if (!r && m && !a && N < 4 && M < 4 && h > 2 && (v[0] || H.preloadAfterLoad) && (v[0] || !l && (b || C || p || g || d[t][$](H.sizesAttr) != "auto"))) { a = v[0] || d[t]; } } if (a && !r) { R(a); } } }; const i = ie(t); const B = function (e) { const t = e.target; if (t._lazyCache) { delete t._lazyCache; return; }x(e); K(t, H.loadedClass); Q(t, H.loadingClass); V(t, L); X(t, "lazyloaded"); }; const a = te(B); var L = function (e) { a({ target: e.target }); }; const T = function (t, i) { try { t.contentWindow.location.replace(i); } catch (e) { t.src = i; } }; const F = function (e) { let t; const i = e[$](H.srcsetAttr); if (t = H.customMedia[e[$]("data-media") || e[$]("media")]) { e.setAttribute("media", t); } if (i) { e.setAttribute("srcset", i); } }; const s = te((t, e, i, a, r) => { let n; let s; let l; let o; let u; let f; if (!(u = X(t, "lazybeforeunveil", e)).defaultPrevented) { if (a) { if (i) { K(t, H.autosizesClass); } else { t.setAttribute("sizes", a); } }s = t[$](H.srcsetAttr); n = t[$](H.srcAttr); if (r) { l = t.parentNode; o = l && j.test(l.nodeName || ""); }f = e.firesLoad || "src" in t && (s || n || o); u = { target: t }; K(t, H.loadingClass); if (f) { clearTimeout(c); c = I(x, 2500); V(t, L, true); } if (o) { G.call(l.getElementsByTagName("source"), F); } if (s) { t.setAttribute("srcset", s); } else if (n && !o) { if (d.test(t.nodeName)) { T(t, n); } else { t.src = n; } } if (r && (s || o)) { Y(t, { src: n }); } } if (t._lazyRace) { delete t._lazyRace; }Q(t, H.lazyClass); ee(() => { const e = t.complete && t.naturalWidth > 1; if (!f || e) { if (e) { K(t, "ls-is-cached"); }B(u); t._lazyCache = true; I(() => { if ("_lazyCache" in t) { delete t._lazyCache; } }, 9); } if (t.loading == "lazy") { N--; } }, true); }); var R = function (e) { if (e._lazyRace) { return; } let t; const i = n.test(e.nodeName); const a = i && (e[$](H.sizesAttr) || e[$]("sizes")); const r = a == "auto"; if ((r || !m) && i && (e[$]("src") || e.srcset) && !e.complete && !J(e, H.errorClass) && J(e, H.lazyClass)) { return; }t = X(e, "lazyunveilread").detail; if (r) { re.updateElem(e, true, e.offsetWidth); }e._lazyRace = true; N++; s(e, t, r, a, i); }; const r = ae(() => { H.loadMode = 3; i(); }); const l = function () { if (H.loadMode == 3) { H.loadMode = 2; }r(); }; var o = function () { if (m) { return; } if (f.now() - e < 999) { I(o, 999); return; }m = true; H.loadMode = 3; i(); q("scroll", l, true); }; return {
        _() { e = f.now(); k.elements = D.getElementsByClassName(H.lazyClass); v = D.getElementsByClassName(`${H.lazyClass} ${H.preloadClass}`); q("scroll", i, true); q("resize", i, true); q("pageshow", (e) => { if (e.persisted) { const t = D.querySelectorAll(`.${H.loadingClass}`); if (t.length && t.forEach) { U(() => { t.forEach((e) => { if (e.complete) { R(e); } }); }); } } }); if (u.MutationObserver) { new MutationObserver(i).observe(O, { childList: true, subtree: true, attributes: true }); } else { O[P]("DOMNodeInserted", i, true); O[P]("DOMAttrModified", i, true); setInterval(i, 999); }q("hashchange", i, true); ["focus", "mouseover", "click", "load", "transitionend", "animationend"].forEach((e) => { D[P](e, i, true); }); if (/d$|^c/.test(D.readyState)) { o(); } else { q("load", o); D[P]("DOMContentLoaded", i); I(o, 2e4); } if (k.elements.length) { t(); ee._lsFlush(); } else { i(); } }, checkElems: i, unveil: R, _aLSL: l
      };
    }()); var re = (function () { let i; const n = te((e, t, i, a) => { let r; let n; let s; e._lazysizesWidth = a; a += "px"; e.setAttribute("sizes", a); if (j.test(t.nodeName || "")) { r = t.getElementsByTagName("source"); for (n = 0, s = r.length; n < s; n++) { r[n].setAttribute("sizes", a); } } if (!i.detail.dataAttr) { Y(e, i.detail); } }); const a = function (e, t, i) { let a; const r = e.parentNode; if (r) { i = s(e, r, i); a = X(e, "lazybeforesizes", { width: i, dataAttr: !!t }); if (!a.defaultPrevented) { i = a.detail.width; if (i && i !== e._lazysizesWidth) { n(e, r, a, i); } } } }; const e = function () { let e; const t = i.length; if (t) { e = 0; for (;e < t; e++) { a(i[e]); } } }; const t = ae(e); return { _() { i = D.getElementsByClassName(H.autosizesClass); q("resize", t); }, checkElems: t, updateElem: a }; }()); var t = function () { if (!t.i && D.getElementsByClassName) { t.i = true; re._(); e._(); } }; return I(() => { H.init && t(); }), k = {
      cfg: H, autoSizer: re, loader: e, init: t, uP: Y, aC: K, rC: Q, hC: J, fire: X, gW: s, rAF: ee
    };
  }(e, e.document, Date)); e.lazySizes = t, typeof module === "object" && module.exports && (module.exports = t);
}(typeof window !== "undefined" ? window : {}));
